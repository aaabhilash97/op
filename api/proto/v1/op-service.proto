syntax = "proto3";
package v1;

option go_package = ".;v1";

// import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info : {title : "Op service";
version : "1.0";
contact : {
name:
  "go-grpc-http-rest-microservice-tutorial project";
url:
  "https://github.com/aaabhilash97/op";
email:
  "medium@amsokol.com";
};
}
;
schemes : HTTP;
consumes : "application/json";
produces : "application/json";
responses : {
key:
  "404";
value : {
description:
  "Returned when the resource does not exist.";
schema : {
json_schema : {
type:
  STRING;
}
}
}
}
}
;

// Request data to create new todo task
message NewUserRegistrationRequest {}

// Contains data of created todo task
message NewUserRegistrationResponse {}

// Service to manage list of todo tasks
service OpService {

  // RegistrationUser new todo task
  rpc NewUserRegistration(NewUserRegistrationRequest)
      returns (NewUserRegistrationResponse) {
    option (google.api.http) = {
      post : "/api/v1/NewUserRegistration"
      body : "*"
    };
  }
}
